import sensor,image,lcd
import KPU as kpu
import time
from Maix import FPIOA,GPIO
task_fd = kpu.load("/sd/fd.kmodel") 
kpu.set_outputs(task_fd, 0, 15,20,30)
# task_ld = kpu.load("/sd/ld.kmodel") 
# a=kpu.set_outputs(task_ld, 0, 1,1,1)
# a=kpu.set_outputs(task_ld, 1, 1,1,1)
# a=kpu.set_outputs(task_ld, 2, 1,1,1)
# a=kpu.set_outputs(task_ld, 3, 1,1,1)
# a=kpu.set_outputs(task_ld, 4, 1,1,1)
# a=kpu.set_outputs(task_ld, 5, 1,1,1)
# a=kpu.set_outputs(task_ld, 6, 1,1,1)
# a=kpu.set_outputs(task_ld, 7, 1,1,1)
clock = time.clock()
lcd.init()
sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
# sensor.set_hmirror(1)
# sensor.set_vflip(1)
sensor.run(1)
anchor = (1.889, 2.5245, 2.9465, 3.94056, 3.99987, 5.3658, 5.155437, 6.92275, 6.718375, 9.01025) #anchor for face detect
a = kpu.init_yolo2(task_fd, 0.5, 0.3, 5, anchor)
img_lcd=image.Image()
while(1):
    #check_key()
    img = sensor.snapshot()
    img.rotation_corr(z_rotation=-90)
    img.resize(320,240)
    clock.tick()
    code = kpu.run_yolo2(task_fd, img)
    if code:
        print("yolo found something")
        for i in code:
            # Cut face and resize to 128x128
            print("found face")
            a = img.draw_rectangle(i.rect())
            # face_cut=img.cut(i.x(),i.y(),i.w(),i.h())
            # face_cut_128=face_cut.resize(64,64)
            # a =face_cut_128.pix_to_ai()
            # a = img.draw_image(face_cut_128, (0,0))
            # #Landmark for face 5 points
            # a = kpu.forward(task_ld, face_cut_128)
            # fmap=kpu.get_output(task_ld, 1)
            # le_up_y = int(i.y() + fmap[0]/64.0*i.h())
            # fmap=kpu.get_output(task_ld, 3)
            # le_down_y = int(i.y() + fmap[0]/64.0*i.h())
            # fmap=kpu.get_output(task_ld, 4)
            # re_up_y = int(i.y() + fmap[0]/64.0*i.h())
            # fmap=kpu.get_output(task_ld, 5)
            # re_down_y = int(i.y() + fmap[0]/64.0*i.h())
            # fmap=kpu.get_output(task_ld, 6)
            # m_up_y = int(i.y() + fmap[0]/64.0*i.h())
            # fmap=kpu.get_output(task_ld, 7)
            # m_down_y = int(i.y() + fmap[0]/64.0*i.h())        
            a = img.draw_line(i.x(), i.y(), int(i.x()+i.w()), int(i.y() + i.h()), color = (255, 0, 0), thickness = 2)            
            # a = img.draw_line(i.x(), le_down_y, int(i.x()+i.w()/2), le_down_y, color = (255, 0, 0), thickness = 2)
            # a = img.draw_line(int(i.x()+i.w()/2), re_up_y, i.x()+i.w(), re_up_y, color = (255, 0, 0), thickness = 2)
            # a = img.draw_line(int(i.x()+i.w()/2), re_down_y, i.x()+i.w(), re_down_y, color = (255, 0, 0), thickness = 2)
            # a = img.draw_line(i.x(), m_up_y, i.x()+i.w(), m_up_y, color = (255, 0, 0), thickness = 2)
            # a = img.draw_line(i.x(), m_down_y, i.x()+i.w(), m_down_y, color = (255, 0, 0), thickness = 2)
    fps =clock.fps()
    print("%2.1f fps"%fps)
    a = lcd.display(img)
    #kpu.memtest()

a = kpu.deinit(task_fd)
# a = kpu.deinit(task_ld)
